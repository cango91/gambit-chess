---
description: 
globs: client/src/components/**/*.jsx,client/src/components/**/*.tsx,client/src/three/**/*.js,client/src/three/**/*.ts
alwaysApply: false
---
 @base.mdc
Description: Three.js implementation standards for Gambit Chess

# 3D Chess Board
- Create reusable 3D components for board and pieces
- Implement proper lighting and shadows
- Use optimized 3D models for chess pieces
- Apply appropriate materials and textures
- Enable camera rotation and zoom functionality

# Performance Optimization
- Implement proper object pooling
- Use instanced meshes for similar objects
- Optimize rendering with proper LOD (Level of Detail)
- Implement efficient raycasting for piece selection
- Enable frustum culling for off-screen objects

# Animation
- Create smooth animations for piece movement
- Implement visual feedback for duels and captures
- Use GSAP for complex animation sequences
- Add appropriate transition effects
- Ensure consistent animation timing

# Three.js Integration
- Properly dispose of Three.js resources on component unmount
- Handle window resize events for canvas
- Implement responsive design for different screen sizes
- Create custom shaders for special effects
- Use proper antialiasing techniques

Globs:
  client/src/components/**/*.jsx
  client/src/components/**/*.tsx
  client/src/three/**/*.js
  client/src/three/**/*.ts