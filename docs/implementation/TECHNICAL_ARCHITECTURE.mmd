graph TD
    %% Client-Server Communication
    ClientApp[Client Application] <--> |SecureMessage Protocol| Server[Server]
    
    %% Client Components
    subgraph "Client"
        ClientApp --> Rendering[Rendering Engine]
        ClientApp --> InputHandler[Input Handler]
        ClientApp --> ClientState[Client State]
        ClientApp --> NetworkLayer[Network Layer]
        
        NetworkLayer --> MessageHandler[Message Handler]
        NetworkLayer --> WSConnection[WebSocket Connection]
        
        %% Add Security Layer to Client
        NetworkLayer --> ClientSecurityLayer[Security Layer]
        ClientSecurityLayer --> TokenManager[Token Manager]
        ClientSecurityLayer --> SignatureGenerator[Signature Generator]
        ClientSecurityLayer --> ChallengeHandler[Challenge Handler]
        ClientSecurityLayer --> MessageValidator[Message Validator]
        
        ClientState --> UIState[UI State]
        ClientState --> GameModel[Game Model]
        ClientState --> AnimationState[Animation State]
        
        Rendering --> Board[Board Renderer]
        Rendering --> BPDisplay[BP Display]
        Rendering --> TimerDisplay[Timer Display]
        Rendering --> DuelUI[Duel Interface]
        
        InputHandler --> MoveInput[Move Selection]
        InputHandler --> BPAllocation[BP Allocation]
        InputHandler --> RetreatSelection[Retreat Selection]
    end
    
    %% Server Components
    subgraph "Server"
        Server --> WebSocketController[WebSocket Controller]
        Server --> GameManagerService[Game Manager Service]
        
        %% Add Security Layer to Server
        WebSocketController --> ServerSecurityLayer[Security Layer]
        ServerSecurityLayer --> AuthenticationService[Authentication Service]
        ServerSecurityLayer --> TokenValidator[Token Validator]
        ServerSecurityLayer --> SignatureVerifier[Signature Verifier]
        ServerSecurityLayer --> ChallengeGenerator[Challenge Generator]
        
        GameManagerService --> BoardService[Board Service]
        GameManagerService --> BPManagerService[BP Manager Service]
        GameManagerService --> TacticalDetectorService[Tactical Detector Service]
        GameManagerService --> TimerService[Timer Service]
        
        WebSocketController --> MessageRouter[Message Router]
        WebSocketController --> StatePublisher[State Publisher]
        
        GameManagerService --> GameSessionRepository[Game Session Repository]
        GameManagerService --> PlayerManager[Player Manager]
        GameManagerService --> SpectatorManager[Spectator Manager]
        
        GameSessionRepository --> RedisRepository[Redis Repository]
        GameSessionRepository --> DBRepository[Database Repository]
    end
    
    %% Shared Components
    subgraph "Shared"
        SharedTypes[Shared Types]
        EventDefinitions[Event Definitions]
        ChessUtils[Chess Utilities]
        ValidationUtils[Validation Utilities]
        
        %% Add Security Types to Shared
        SecurityTypes[Security Types]
        SharedTypes --> SecurityTypes
        EventDefinitions --> SecurityTypes
        
        SharedTypes --> EventDefinitions
        SharedTypes --> DTOs[Data Transfer Objects]
        ChessUtils --> MovementRules[Movement Rules]
        ChessUtils --> CheckDetection[Check Detection]
        ValidationUtils --> InputValidation[Input Validation]
        ValidationUtils --> EventValidation[Event Validation]
        ValidationUtils --> SecurityValidation[Security Validation]
    end
    
    %% Component Relationships
    ClientApp --> SharedTypes
    ClientApp --> ChessUtils
    ClientApp --> ValidationUtils
    ClientApp --> SecurityTypes
    Server --> SharedTypes
    Server --> ChessUtils
    Server --> ValidationUtils
    Server --> SecurityTypes
    
    %% Security Flow
    ClientSecurityLayer -.-> ServerSecurityLayer
    ServerSecurityLayer -.-> ClientSecurityLayer
    
    %% Data Flow
    ClientState -.-> NetworkLayer
    MessageHandler -.-> ClientState
    MessageValidator -.-> MessageHandler
    
    WebSocketController -.-> GameManagerService
    GameManagerService -.-> BoardService
    GameManagerService -.-> BPManagerService
    GameManagerService -.-> TacticalDetectorService
    GameManagerService -.-> TimerService
    GameManagerService -.-> StatePublisher
    ServerSecurityLayer -.-> MessageRouter
    MessageRouter -.-> GameManagerService
    
    %% Repository Connections
    GameManagerService -.-> RedisRepository
    RedisRepository -.-> DBRepository
    
    %% Service Operations
    BoardService --> MoveValidation[Move Validation]
    BoardService --> BoardStateTracking[Board State Tracking]
    BoardService --> CheckDetection[Check Detection]
    
    BPManagerService --> BPAllocationProcessing[BP Allocation Processing]
    BPManagerService --> DuelResolution[Duel Resolution]
    BPManagerService --> BPRegeneration[BP Regeneration]
    
    TacticalDetectorService --> TacticalAnalysis[Tactical Analysis]
    TacticalDetectorService --> DeNovoDetection[De Novo Advantage Detection]
    
    TimerService --> TimerControl[Timer Control]
    TimerService --> TimeoutHandling[Timeout Handling]
    
    %% Client-Server Secure Interactions
    WSConnection <-.-> |SecureMessage| MessageRouter
    StatePublisher <-.-> |SecureMessage| MessageHandler